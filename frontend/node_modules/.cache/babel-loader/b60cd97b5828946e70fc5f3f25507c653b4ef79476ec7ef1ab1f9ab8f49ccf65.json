{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\n//import { useStore } from 'vuex'; // Usa Pinia si prefieres.. No estamos usando VUEX, estamos usando PINIA, asì que la siguiente lìnea usa la tienda de PINIA \nimport { useItemStore } from '../stores/itemStore';\n\n//const store = useStore(); Como no estamos usando VUEX entonces èsta lìnea no sirve. \n\nexport default {\n  __name: 'homeItems',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useItemStore();\n    const items = ref([]);\n    onMounted(async () => {\n      await store.fetchItems(); //Se hace la peticion cuando el componente se monta. \n      items.value = store.items;\n    });\n    const deleteItem = async id => {\n      await store.deleteItem(id);\n      items.value = store.items;\n    };\n    watch(() => store.items, newItems => {\n      items.value = newItems; // Reacciona a los cambios en `store.items`\n    });\n    const __returned__ = {\n      store,\n      items,\n      deleteItem,\n      ref,\n      onMounted,\n      watch,\n      get useItemStore() {\n        return useItemStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","useItemStore","store","items","fetchItems","value","deleteItem","id","newItems"],"sources":["C:/Users/Yohana/Documents/vue/crud-vue-app/frontend/src/views/homeItems.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <img src=\"../src/assets/logo.png\">\r\n      <router-link to=\"/create\">\r\n        <button>Crear nueva tarea</button></router-link>\r\n      \r\n        <div :class=\"{\r\n          completada: item.completada,\r\n          pendiente: !item.completada,\r\n          tarea: true }\" v-for=\"item in items\" :key=\"item.id\">\r\n          \r\n          <h1>{{ item.titulo }}</h1>\r\n          <h3>{{ item.descripcion }}</h3>\r\n          <router-link :to=\"`/edit/${item._id}`\"><button>Edit</button></router-link>\r\n          <button @click=\"deleteItem(item._id)\">Delete</button>\r\n        </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted , watch } from 'vue';\r\n  //import { useStore } from 'vuex'; // Usa Pinia si prefieres.. No estamos usando VUEX, estamos usando PINIA, asì que la siguiente lìnea usa la tienda de PINIA \r\n  import { useItemStore } from '../stores/itemStore';\r\n  \r\n  //const store = useStore(); Como no estamos usando VUEX entonces èsta lìnea no sirve. \r\n  const store = useItemStore();\r\n  const items = ref([]);\r\n  \r\n  onMounted( async () => {\r\n    await store.fetchItems(); //Se hace la peticion cuando el componente se monta. \r\n    items.value = store.items;\r\n  });\r\n  const deleteItem = async (id) => {\r\n    await store.deleteItem(id);\r\n    items.value = store.items;\r\n  };\r\n\r\n  watch(() => store.items, (newItems) => {\r\n  items.value = newItems; // Reacciona a los cambios en `store.items`\r\n});\r\n  </script>\r\n\r\n  <style scoped>\r\n@import \"@/styles/main.scss\";\r\n\r\n  </style>"],"mappings":"AAoBE,SAASA,GAAG,EAAEC,SAAS,EAAGC,KAAK,QAAQ,KAAK;AAC5C;AACA,SAASC,YAAY,QAAQ,qBAAqB;;AAElD;;;;;;;;IACA,MAAMC,KAAK,GAAGD,YAAY,CAAC,CAAC;IAC5B,MAAME,KAAK,GAAGL,GAAG,CAAC,EAAE,CAAC;IAErBC,SAAS,CAAE,YAAY;MACrB,MAAMG,KAAK,CAACE,UAAU,CAAC,CAAC,CAAC,CAAC;MAC1BD,KAAK,CAACE,KAAK,GAAGH,KAAK,CAACC,KAAK;IAC3B,CAAC,CAAC;IACF,MAAMG,UAAU,GAAG,MAAOC,EAAE,IAAK;MAC/B,MAAML,KAAK,CAACI,UAAU,CAACC,EAAE,CAAC;MAC1BJ,KAAK,CAACE,KAAK,GAAGH,KAAK,CAACC,KAAK;IAC3B,CAAC;IAEDH,KAAK,CAAC,MAAME,KAAK,CAACC,KAAK,EAAGK,QAAQ,IAAK;MACvCL,KAAK,CAACE,KAAK,GAAGG,QAAQ,CAAC,CAAC;IAC1B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}