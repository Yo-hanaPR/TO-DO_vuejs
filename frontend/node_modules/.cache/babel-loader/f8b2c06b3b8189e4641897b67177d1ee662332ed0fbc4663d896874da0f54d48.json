{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1740d4f7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\Yohana\\Documents\\vue\\crud-vue-app\\frontend\\src\\views\\homeItems.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      \r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted , watch } from 'vue';\r\n  //import { useStore } from 'vuex'; // Usa Pinia si prefieres.. No estamos usando VUEX, estamos usando PINIA, asì que la siguiente lìnea usa la tienda de PINIA \r\n  import { useItemStore } from '../stores/itemStore';\r\n  \r\n  //const store = useStore(); Como no estamos usando VUEX entonces èsta lìnea no sirve. \r\n  const store = useItemStore();\r\n  const items = ref([]);\r\n  \r\n  onMounted( async () => {\r\n    await store.fetchItems(); //Se hace la peticion cuando el componente se monta. \r\n    items.value = store.items;\r\n  });\r\n  const deleteItem = async (id) => {\r\n    await store.deleteItem(id);\r\n    items.value = store.items;\r\n  };\r\n\r\n  watch(() => store.items, (newItems) => {\r\n  items.value = newItems; // Reacciona a los cambios en `store.items`\r\n});\r\n  </script>\r\n\r\n  <style scoped>\r\n@import \"@/styles/main.scss\";\r\n\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAEM,OAFNC,UAEM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}