{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Edit Item\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Save\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.editItem, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.name = $event),\n    placeholder: \"Item Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.name]]), _hoisted_2], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","onSubmit","_withModifiers","$setup","editItem","_cache","$event","_ctx","name","placeholder","_hoisted_2"],"sources":["C:\\Users\\Yohana\\Documents\\vue\\crud-vue-app\\frontend\\src\\views\\editItems.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Edit Item</h1>\r\n      <form @submit.prevent=\"editItem\">\r\n        <input v-model=\"name\" placeholder=\"Item Name\" />\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue';\r\n  //import { useStore } from 'vuex'; // Usa Pinia si prefieres\r\n  import { useItemStore } from '../stores/itemStore';\r\n  import { useRouter, useRoute } from 'vue-router';\r\n  \r\n  const store = useItemStore();\r\n  const router = useRouter();\r\n  const route = useRoute();\r\n  const titulo = ref('');\r\n  const descripcion = ref('');\r\n  const id = route.params.id;\r\n  \r\n  onMounted(() => {\r\n    //se ejecuta cuando se llama a ESTE componente.\r\n    console.log(id)\r\n    const item = store.items.find(item => item._id === id);\r\n    if (item) {\r\n      console.log(\"se encontro\")\r\n      titulo.value = item.name;\r\n    }\r\n  });\r\n  \r\n  const editItem = () => {\r\n    store.editItem({ id, name: name.value });\r\n    router.push('/');\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAEMA,mBAAA,CAAkB,YAAd,WAAS;gCAGXA,mBAAA,CAAmC;EAA3BC,IAAI,EAAC;AAAQ,GAAC,MAAI;;uBAJ9BC,mBAAA,CAMM,cALJC,UAAkB,EAClBH,mBAAA,CAGO;IAHAI,QAAM,EAHnBC,cAAA,CAG6BC,MAAA,CAAAC,QAAQ;sBAC7BP,mBAAA,CAAgD;IAJxD,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIwBC,IAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAlBF,IAAA,CAAAC,IAAI,E,GACpBE,UAAmC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}